spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/ams-oauth2
    username: ams
    password: ams
    driver-class-name: org.postgresql.Driver

server:
  servlet:
    context-path: /auth
  port: 8081

#---
#spring:
#  application:
#    name: auth-service
#    cloud:
#      config:
#        uri: http://localhost:8888 # where the config-server is running
#        fail-fast: true #the service will not run if it can't reach the config-service
#        username: user #username of the config-service
#        password: amsConfigServerPassword #password of the config-service
#  profiles: def1
#  datasource:
#    url: jdbc:postgresql://localhost:5432/ams-oauth2
#    username: ams
#    password: ams
#    driver-class-name: org.postgresql.Driver
#
#server:
#  servlet:
#    context-path: /auth
#  port:  ${PORT:0}
#
#
#eureka:
#  instance:
#    instanceId: ${spring.cloud.client.hostname}:${spring.application.name}:${random.int[1,999999]}
#    prefer-ip-address: true
#  #    lease-expiration-duration-in-seconds: 10
#  #    lease-renewal-interval-in-seconds: 10
#  client:
#    register-with-eureka: true
#    fetch-registry: true
##    registry-fetch-interval-seconds: 7
##    instance-info-replication-interval-seconds: 10
#
#grant-type: #password grant-type secret
#  password:
#    user: mobile
#    pass: pecai98
#
#---
#spring:
#  application:
#    name: auth-service
#    cloud:
#      config:
#        uri: http://localhost:8888 # where the config-server is running
#        fail-fast: true #the service will not run if it can't reach the config-service
#        username: user #username of the config-service
#        password: amsConfigServerPassword #password of the config-service
#  profiles: default
#  datasource:
#    url: jdbc:postgresql://localhost:5432/ams-oauth2
#    username: ams
#    password: ams
#    driver-class-name: org.postgresql.Driver
#server:
#  post: 8081
#
#eureka:
#  instance:
#    prefer-ip-address: true
#  #    lease-expiration-duration-in-seconds: 10
#  #    lease-renewal-interval-in-seconds: 10
#  client:
#    register-with-eureka: true
#    fetch-registry: true
##    registry-fetch-interval-seconds: 7
##    instance-info-replication-interval-seconds: 10
#
#grant-type: #password grant-type secret
#  password:
#    user: mobile
#    pass: pecai98
