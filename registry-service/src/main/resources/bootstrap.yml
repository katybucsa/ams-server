spring:
  application:
    name: registry-service #name of the application
  cloud:
    config:
      uri: http://localhost:8888 #where the config service is running
      fail-fast: true #the service will not run if it can't reach the config-service
      username: user #username of the config-service
      password: amsConfigServerPassword #password of the config-service
  flyway:
    enabled: false #disable flyway for registry server
  autoconfigure: #disable jpa repository for registry server
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, \
      org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, \
      org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration

eureka:
  client:
    register-with-eureka: false
    fetch-registry: false
#  server:
#    response-cache-update-interval-ms:

#management:
#  endpoint:
#    health:
#      enabled: true
#      show-details: always
#    shutdown:
#      enabled: true
#  endpoints:
#    web:
#      base-path: /
#      # By default, only 'health' and 'info' are accessible via web
#      exposure:
#        include: '*'
#
#---
#spring:
#  profiles: peer-1
#server:
#  port: 8761
#eureka:
#  instance:
#    hostname: peer-1-server.com
#  client:
#    registerWithEureka: true
#    fetchRegistry: true
#    serviceUrl:
#      defaultZone: http://peer-2-server.com:8762/eureka/
#
#---
#spring:
#  profiles: peer-2
#server:
#  port: 8762
#eureka:
#  instance:
#    hostname: peer-2-server.com
#  client:
#    registerWithEureka: true
#    fetchRegistry: true
#    serviceUrl:
#      defaultZone: http://peer-1-server.com:8761/eureka/
